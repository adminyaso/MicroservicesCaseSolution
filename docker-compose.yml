
services:

  apigateway:
      build:
        context: .
        dockerfile: ./src/ApiGateway/ApiGateway/Dockerfile
      ports:
        - "8080:80"
      environment:
        - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=DbKayraTask;User Id=test12;Password=test12;TrustServerCertificate=True;
      depends_on:
        - authservice-api
        - productservice-api
      networks: [ microservices_network ]
  authservice-api:
    build: 
      context: .  #auth.servis kök dizini(referanslarla)
      dockerfile: ./src/Services/AuthService/AuthService.API/Dockerfile #dokerfile dizini
    environment:
      - ASPNETCORE_URLS=http://+:80 #dinlediği port
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=DbKayraTask;User Id=test12;Password=test12;TrustServerCertificate=True;
    networks: [ microservices_network ]
    ports:
      - "8088:80"
  productservice-api:
    build: 
      context : .  #product.servis kök dizini(referanslarla)
      dockerfile: ./src/Services/ProductService/ProductService.API/Dockerfile #dokerfile dizini
    ports:
      - "8086:80"
    environment:
      - ASPNETCORE_URLS=http://+:80 #dinlediği port
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=DbKayraTask;User Id=test12;Password=test12;TrustServerCertificate=True;
      - Redis__ConnectionString=redis:6379
    depends_on:
      - redis
    networks: [ microservices_network ]

  logservice-api:
    build: 
      context: .  #log.servis kök dizini(referanslarla)
      dockerfile: ./src/Services/LogService/LogService.API/Dockerfile #dokerfile dizini
    ports:
      - "8084:80"
    environment:
      - ASPNETCORE_URLS=http://+:80 #dinlediği port
      #çalıştırılacak bilgisayar ve Sql bilgileri
      - ConnectionStrings__DefaultConnection=Server=host.docker.internal,1433;Database=DbKayraTask;User Id=test12;Password=test12;TrustServerCertificate=True;
    networks: [ microservices_network ]

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks: [ microservices_network ]

  seq:
    image: datalust/seq
    environment:
      - ACCEPT_EULA=Y  # Seq EULA'yı kabul etmek için gerekli ortam değişkeni
    ports:
      - "5341:80"
    networks: [ microservices_network ]

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks: [ microservices_network ]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks: [ microservices_network ]

networks:
  microservices_network:
    driver: bridge
